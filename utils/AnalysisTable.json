{"WhileStatement": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "-1", "if": "-1", "void": "-1", "while": "while ( Condition ) { CodeBody }", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "FuncCallStatement": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "-1", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "ID ( Arguments ) ;", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "CodeBody": {"]": "-1", ">=": "-1", "float": "VarDefs Statements", "int": "VarDefs Statements", "break": "VarDefs Statements", "double": "VarDefs Statements", "<": "-1", "[": "-1", "/": "-1", "--": "VarDefs Statements", "!=": "-1", "++": "VarDefs Statements", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "VarDefs Statements", "!": "-1", "char": "VarDefs Statements", "(": "-1", "if": "VarDefs Statements", "void": "VarDefs Statements", "while": "VarDefs Statements", "||": "-1", "<=": "-1", "-": "-1", "}": "$", "ID": "VarDefs Statements", "&&": "-1", "return": "VarDefs Statements", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Expression": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "Term ExpressionTail", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "Term ExpressionTail", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "Term ExpressionTail", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "FuncDefs": {"]": "-1", ">=": "-1", "float": "FuncDef FuncDefs", "int": "FuncDef FuncDefs", "break": "-1", "double": "FuncDef FuncDefs", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "FuncDef FuncDefs", "(": "-1", "if": "-1", "void": "FuncDef FuncDefs", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "$"}, "EaqulOp": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "=", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "-1", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Factor": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "( Expression )", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "ID [ Expression ]", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "NUM", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Params": {"]": "-1", ">=": "-1", "float": "ParamList", "int": "ParamList", "break": "-1", "double": "ParamList", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "$", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "ParamList", "(": "-1", "if": "-1", "void": "ParamList", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "ControlStatement": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "break ;", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "continue ;", "!": "-1", "char": "-1", "(": "-1", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "return Expression ;", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Type": {"]": "-1", ">=": "-1", "float": "float", "int": "int", "break": "-1", "double": "double", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "char", "(": "-1", "if": "-1", "void": "void", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Arguments": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "$", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "Argument", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "Argument", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "Argument", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "JudgeOp": {"]": "-1", ">=": ">=", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "<", "[": "-1", "/": "-1", "--": "-1", "!=": "!=", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "-1", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "<=", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": ">", "*": "-1", "else": "-1", "==": "==", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "AssignStatement": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "-1", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "ID [ Expression ] EaqulOp Expression ;", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Argument": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "Expression", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "Expression", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "Expression", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "ElseifPart": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "$", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "$", "!=": "-1", "++": "$", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "$", "!": "-1", "char": "-1", "(": "-1", "if": "$", "void": "-1", "while": "$", "||": "-1", "<=": "-1", "-": "-1", "}": "$", "ID": "$", "&&": "-1", "return": "$", ">": "-1", "*": "-1", "else": "$", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "ParamList": {"]": "-1", ">=": "-1", "float": "Param , ParamList", "int": "Param , ParamList", "break": "-1", "double": "Param , ParamList", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "Param , ParamList", "(": "-1", "if": "-1", "void": "Param , ParamList", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Program": {"]": "-1", ">=": "-1", "float": "FuncDefs", "int": "FuncDefs", "break": "-1", "double": "FuncDefs", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "FuncDefs", "(": "-1", "if": "-1", "void": "FuncDefs", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Param": {"]": "-1", ">=": "-1", "float": "Type ID [ NUM ]", "int": "Type ID [ NUM ]", "break": "-1", "double": "Type ID [ NUM ]", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "Type ID [ NUM ]", "(": "-1", "if": "-1", "void": "Type ID [ NUM ]", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "VarDef": {"]": "-1", ">=": "-1", "float": "Type ID [ NUM ]", "int": "Type ID [ NUM ]", "break": "-1", "double": "Type ID [ NUM ]", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "Type ID [ NUM ]", "(": "-1", "if": "-1", "void": "Type ID [ NUM ]", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "AddOp": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "+", "continue": "-1", "!": "-1", "char": "-1", "(": "-1", "if": "-1", "void": "-1", "while": "-1", "||": "||", "<=": "-1", "-": "-", "}": "-1", "ID": "-1", "&&": "&&", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Term": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "Factor TermTail", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "Factor TermTail", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "Factor TermTail", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "MulOp": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "/", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "-1", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "*", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "%", "#": "-1"}, "TermTail": {"]": "$", ">=": "$", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "$", "[": "-1", "/": "MulOp Factor TermTail", "--": "-1", "!=": "$", "++": "-1", ")": "$", ";": "$", "=": "-1", "+": "$", "continue": "-1", "!": "-1", "char": "-1", "(": "-1", "if": "-1", "void": "-1", "while": "-1", "||": "$", "<=": "$", "-": "$", "}": "-1", "ID": "-1", "&&": "$", "return": "-1", ">": "$", "*": "MulOp Factor TermTail", "else": "-1", "==": "$", "NUM": "-1", ",": "$", "{": "-1", "%": "MulOp Factor TermTail", "#": "-1"}, "Condition": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "! Expression", "char": "-1", "(": "Expression JudgeOp Expression", "if": "-1", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "Expression JudgeOp Expression", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "Expression JudgeOp Expression", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Statement": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "ControlStatement", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-- ID ;", "!=": "-1", "++": "++ ID ;", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "ControlStatement", "!": "-1", "char": "-1", "(": "-1", "if": "IfStatemnt", "void": "-1", "while": "WhileStatement", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "ID -- ;", "&&": "-1", "return": "ControlStatement", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "IfStatemnt": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "-1", "(": "-1", "if": "if ( Condition ) { CodeBody } ElseifPart Elsepart", "void": "-1", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "FuncDef": {"]": "-1", ">=": "-1", "float": "Type ID ( Params ) { CodeBody }", "int": "Type ID ( Params ) { CodeBody }", "break": "-1", "double": "Type ID ( Params ) { CodeBody }", "<": "-1", "[": "-1", "/": "-1", "--": "-1", "!=": "-1", "++": "-1", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "-1", "!": "-1", "char": "Type ID ( Params ) { CodeBody }", "(": "-1", "if": "-1", "void": "Type ID ( Params ) { CodeBody }", "while": "-1", "||": "-1", "<=": "-1", "-": "-1", "}": "-1", "ID": "-1", "&&": "-1", "return": "-1", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Statements": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "Statement Statements", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "Statement Statements", "!=": "-1", "++": "Statement Statements", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "Statement Statements", "!": "-1", "char": "-1", "(": "-1", "if": "Statement Statements", "void": "-1", "while": "Statement Statements", "||": "-1", "<=": "-1", "-": "-1", "}": "$", "ID": "Statement Statements", "&&": "-1", "return": "Statement Statements", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "ExpressionTail": {"]": "$", ">=": "$", "float": "-1", "int": "-1", "break": "-1", "double": "-1", "<": "$", "[": "-1", "/": "-1", "--": "-1", "!=": "$", "++": "-1", ")": "$", ";": "$", "=": "-1", "+": "AddOp Term ExpressionTail", "continue": "-1", "!": "-1", "char": "-1", "(": "-1", "if": "-1", "void": "-1", "while": "-1", "||": "AddOp Term ExpressionTail", "<=": "$", "-": "AddOp Term ExpressionTail", "}": "-1", "ID": "-1", "&&": "AddOp Term ExpressionTail", "return": "-1", ">": "$", "*": "-1", "else": "-1", "==": "$", "NUM": "-1", ",": "$", "{": "-1", "%": "-1", "#": "-1"}, "VarDefs": {"]": "-1", ">=": "-1", "float": "VarDef VarDefs", "int": "VarDef VarDefs", "break": "$", "double": "VarDef VarDefs", "<": "-1", "[": "-1", "/": "-1", "--": "$", "!=": "-1", "++": "$", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "$", "!": "-1", "char": "VarDef VarDefs", "(": "-1", "if": "$", "void": "VarDef VarDefs", "while": "$", "||": "-1", "<=": "-1", "-": "-1", "}": "$", "ID": "$", "&&": "-1", "return": "$", ">": "-1", "*": "-1", "else": "-1", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}, "Elsepart": {"]": "-1", ">=": "-1", "float": "-1", "int": "-1", "break": "$", "double": "-1", "<": "-1", "[": "-1", "/": "-1", "--": "$", "!=": "-1", "++": "$", ")": "-1", ";": "-1", "=": "-1", "+": "-1", "continue": "$", "!": "-1", "char": "-1", "(": "-1", "if": "$", "void": "-1", "while": "$", "||": "-1", "<=": "-1", "-": "-1", "}": "$", "ID": "$", "&&": "-1", "return": "$", ">": "-1", "*": "-1", "else": "else { CodeBody }", "==": "-1", "NUM": "-1", ",": "-1", "{": "-1", "%": "-1", "#": "-1"}}
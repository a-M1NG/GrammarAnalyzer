{"VarDefs": {"void": "VarDef VarDefs", "++": "$", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "$", "while": "$", "float": "VarDef VarDefs", "%": "-1", ",": "-1", "-": "-1", "ID": "$", "continue": "$", "else": "-1", "if": "$", "double": "VarDef VarDefs", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "VarDef VarDefs", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "VarDef VarDefs", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "$", "}": "$", "&&": "-1", "#": "-1"}, "Term": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "Factor TermTail", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "Factor TermTail", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "Factor TermTail", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "Statement": {"void": "-1", "++": "++ ID", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "ControlStatement", "while": "WhileStatement", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "ID StatementTail", "continue": "ControlStatement", "else": "-1", "if": "IfStatement", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "ControlStatement", "}": "-1", "&&": "-1", "#": "-1"}, "AssignOrFuncTail": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "( Arguments ) ;", "char": "-1", "{": "-1", "[": "IDTail EqualOp Expression ;", ">=": "-1", ">": "-1", "=": "IDTail EqualOp Expression ;", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "IncrementOp": {"void": "-1", "++": "++", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "Argument": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "Expression", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "Expression", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "Expression", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "Statements": {"void": "-1", "++": "Statement Statements", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "Statement Statements", "while": "Statement Statements", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "Statement Statements", "continue": "Statement Statements", "else": "-1", "if": "Statement Statements", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "Statement Statements", "}": "$", "&&": "-1", "#": "-1"}, "ParamList": {"void": "Param ParamListTail", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "Param ParamListTail", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "Param ParamListTail", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "Param ParamListTail", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "Param ParamListTail", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "Param": {"void": "Type ID IDTail", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "Type ID IDTail", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "Type ID IDTail", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "Type ID IDTail", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "Type ID IDTail", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "AddOp": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "||", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "+", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "&&", "#": "-1"}, "content": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "NUM", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "&", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "ArgumentListTail": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "$", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": ", Argument ArgumentListTail", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "ElsePart": {"void": "-1", "++": "$", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "$", "while": "$", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "$", "continue": "$", "else": "else { CodeBody } ElseifPartTail", "if": "$", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "$", "}": "$", "&&": "-1", "#": "-1"}, "FuncDef": {"void": "Type ID ( Params ) { CodeBody }", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "Type ID ( Params ) { CodeBody }", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "Type ID ( Params ) { CodeBody }", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "Type ID ( Params ) { CodeBody }", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "Type ID ( Params ) { CodeBody }", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "CodeBody": {"void": "VarDefs Statements", "++": "VarDefs Statements", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "VarDefs Statements", "while": "VarDefs Statements", "float": "VarDefs Statements", "%": "-1", ",": "-1", "-": "-1", "ID": "VarDefs Statements", "continue": "VarDefs Statements", "else": "-1", "if": "VarDefs Statements", "double": "VarDefs Statements", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "VarDefs Statements", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "VarDefs Statements", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "VarDefs Statements", "}": "$", "&&": "-1", "#": "-1"}, "Type": {"void": "void", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "float", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "double", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "int", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "char", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "MulOp": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "%", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "/", ";": "-1", "*": "*", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "VarDef": {"void": "Type ID IDTail", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "Type ID IDTail", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "Type ID IDTail", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "Type ID IDTail", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "Type ID IDTail", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "IfStatement": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "if ( Condition ) { CodeBody } ElsePart", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "WhileStatement": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "while ( Condition ) { CodeBody }", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "ControlStatement": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "return Expression ;", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "continue ;", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "break ;", "}": "-1", "&&": "-1", "#": "-1"}, "IDTail": {"void": "$", "++": "$", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "$", "return": "$", "while": "$", "float": "$", "%": "-1", ",": "$", "-": "-1", "ID": "$", "continue": "$", "else": "-1", "if": "$", "double": "$", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "$", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "$", "{": "-1", "[": "[ content ]", ">=": "-1", ">": "-1", "=": "$", "&": "-1", "break": "$", "}": "$", "&&": "-1", "#": "-1"}, "Arguments": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "ArgumentList", "==": "-1", ")": "$", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "ArgumentList", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "ArgumentList", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "ParamListTail": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "$", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": ", Param ParamListTail", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "FuncDefs": {"void": "FuncDef FuncDefs", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "FuncDef FuncDefs", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "FuncDef FuncDefs", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "FuncDef FuncDefs", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "FuncDef FuncDefs", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "$"}, "IDFactorTail": {"void": "-1", "++": "-1", "<=": "$", "]": "$", "NUM": "-1", "==": "$", ")": "$", "return": "-1", "while": "-1", "float": "-1", "%": "$", ",": "$", "-": "$", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "$", "/": "$", ";": "$", "*": "$", "int": "-1", "+": "$", "!=": "$", "<": "$", "(": "-1", "char": "-1", "{": "-1", "[": "[ Expression ]", ">=": "$", ">": "$", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "$", "#": "-1"}, "TermTail": {"void": "-1", "++": "-1", "<=": "$", "]": "$", "NUM": "-1", "==": "$", ")": "$", "return": "-1", "while": "-1", "float": "-1", "%": "MulOp Factor TermTail", ",": "$", "-": "$", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "$", "/": "MulOp Factor TermTail", ";": "$", "*": "MulOp Factor TermTail", "int": "-1", "+": "$", "!=": "$", "<": "$", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "$", ">": "$", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "$", "#": "-1"}, "Factor": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "NUM", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "ID IDFactorTail", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "( Expression )", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "StatementTail": {"void": "-1", "++": "IncrementOp ;", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "AssignOrFuncTail", "char": "-1", "{": "-1", "[": "AssignOrFuncTail", ">=": "-1", ">": "-1", "=": "AssignOrFuncTail", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "ElseifPartTail": {"void": "-1", "++": "$", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "$", "while": "$", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "$", "continue": "$", "else": "else if ( Condition ) { CodeBody } ElseifPartTail", "if": "$", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "$", "}": "$", "&&": "-1", "#": "-1"}, "Expression": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "Term ExpressionTail", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "Term ExpressionTail", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "Term ExpressionTail", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "ArgumentList": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "Argument ArgumentListTail", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "Argument ArgumentListTail", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "Argument ArgumentListTail", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "JudgeOp": {"void": "-1", "++": "-1", "<=": "<=", "]": "-1", "NUM": "-1", "==": "==", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "!=", "<": "<", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": ">=", ">": ">", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "Params": {"void": "ParamList", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "$", "return": "-1", "while": "-1", "float": "ParamList", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "ParamList", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "ParamList", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "ParamList", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "ExpressionTail": {"void": "-1", "++": "-1", "<=": "$", "]": "$", "NUM": "-1", "==": "$", ")": "$", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "$", "-": "AddOp Term ExpressionTail", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "AddOp Term ExpressionTail", "/": "-1", ";": "$", "*": "-1", "int": "-1", "+": "AddOp Term ExpressionTail", "!=": "$", "<": "$", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "$", ">": "$", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "AddOp Term ExpressionTail", "#": "-1"}, "EqualOp": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "=", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "Program": {"void": "FuncDefs", "++": "-1", "<=": "-1", "]": "-1", "NUM": "-1", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "FuncDefs", "%": "-1", ",": "-1", "-": "-1", "ID": "-1", "continue": "-1", "else": "-1", "if": "-1", "double": "FuncDefs", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "FuncDefs", "+": "-1", "!=": "-1", "<": "-1", "(": "-1", "char": "FuncDefs", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}, "Condition": {"void": "-1", "++": "-1", "<=": "-1", "]": "-1", "NUM": "Expression JudgeOp Expression", "==": "-1", ")": "-1", "return": "-1", "while": "-1", "float": "-1", "%": "-1", ",": "-1", "-": "-1", "ID": "Expression JudgeOp Expression", "continue": "-1", "else": "-1", "if": "-1", "double": "-1", "||": "-1", "/": "-1", ";": "-1", "*": "-1", "int": "-1", "+": "-1", "!=": "-1", "<": "-1", "(": "Expression JudgeOp Expression", "char": "-1", "{": "-1", "[": "-1", ">=": "-1", ">": "-1", "=": "-1", "&": "-1", "break": "-1", "}": "-1", "&&": "-1", "#": "-1"}}
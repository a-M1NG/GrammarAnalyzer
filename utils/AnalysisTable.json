{"Statement": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "ControlStatement", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "WhileStatement", "double": "-1", "||": "-1", "if": "IfStatement", "float": "-1", ";": "-1", "++": "++ ID", "continue": "ControlStatement", "break": "ControlStatement", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "ID StatementTail", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "IDTail": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "$", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "$", ">=": "-1", ")": "$", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "$", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "Program": {"(": "-1", "void": "FuncDefs", "%": "-1", "-": "-1", "char": "FuncDefs", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "FuncDefs", "||": "-1", "if": "-1", "float": "FuncDefs", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "FuncDefs", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "IncrementOp": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "++", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "ArgumentListTail": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": ", Argument ArgumentListTail", ">=": "-1", ")": "$", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "IfStatement": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "if ( Condition ) { CodeBody } ElsePart", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "CodeBody": {"(": "-1", "void": "VarDefs Statements", "%": "-1", "-": "-1", "char": "VarDefs Statements", "/": "-1", "return": "VarDefs Statements", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "VarDefs Statements", "double": "VarDefs Statements", "||": "-1", "if": "VarDefs Statements", "float": "VarDefs Statements", ";": "-1", "++": "VarDefs Statements", "continue": "VarDefs Statements", "break": "VarDefs Statements", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "VarDefs Statements", "+": "-1", "}": "$", "ID": "VarDefs Statements", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "Params": {"(": "-1", "void": "ParamList", "%": "-1", "-": "-1", "char": "ParamList", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "ParamList", "||": "-1", "if": "-1", "float": "ParamList", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "$", ">": "-1", "int": "ParamList", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "Factor": {"(": "( Expression )", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "ID IDFactorTail", "=": "-1", "<=": "-1", "NUM": "NUM", "*": "-1", "#": "-1"}, "Param": {"(": "-1", "void": "Type ID IDTail", "%": "-1", "-": "-1", "char": "Type ID IDTail", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "Type ID IDTail", "||": "-1", "if": "-1", "float": "Type ID IDTail", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "Type ID IDTail", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "FuncDefs": {"(": "-1", "void": "FuncDef FuncDefs", "%": "-1", "-": "-1", "char": "FuncDef FuncDefs", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "FuncDef FuncDefs", "||": "-1", "if": "-1", "float": "FuncDef FuncDefs", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "FuncDef FuncDefs", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "$"}, "InitExpr": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "$", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "$", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "= Expression", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "ArgumentList": {"(": "Argument ArgumentListTail", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "Argument ArgumentListTail", "=": "-1", "<=": "-1", "NUM": "Argument ArgumentListTail", "*": "-1", "#": "-1"}, "FuncDef": {"(": "-1", "void": "Type ID ( Params ) { CodeBody }", "%": "-1", "-": "-1", "char": "Type ID ( Params ) { CodeBody }", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "Type ID ( Params ) { CodeBody }", "||": "-1", "if": "-1", "float": "Type ID ( Params ) { CodeBody }", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "Type ID ( Params ) { CodeBody }", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "Type": {"(": "-1", "void": "void", "%": "-1", "-": "-1", "char": "char", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "double", "||": "-1", "if": "-1", "float": "float", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "int", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "IDList": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "ID IDTail InitExpr MoreIDs", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "MulOp": {"(": "-1", "void": "-1", "%": "%", "-": "-1", "char": "-1", "/": "/", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "*", "#": "-1"}, "ParamList": {"(": "-1", "void": "Param ParamListTail", "%": "-1", "-": "-1", "char": "Param ParamListTail", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "Param ParamListTail", "||": "-1", "if": "-1", "float": "Param ParamListTail", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "Param ParamListTail", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "JudgeOp": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "<", "&&": "-1", "==": "==", "!=": "!=", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": ">=", ")": "-1", ">": ">", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "<=", "NUM": "-1", "*": "-1", "#": "-1"}, "AddOp": {"(": "-1", "void": "-1", "%": "-1", "-": "-", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "&&", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "||", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "+", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "VarDef": {"(": "-1", "void": "Type IDList ;", "%": "-1", "-": "-1", "char": "Type IDList ;", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "Type IDList ;", "||": "-1", "if": "-1", "float": "Type IDList ;", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "Type IDList ;", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "EqualOp": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "=", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "Arguments": {"(": "ArgumentList", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "$", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "ArgumentList", "=": "-1", "<=": "-1", "NUM": "ArgumentList", "*": "-1", "#": "-1"}, "ControlStatement": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "return Expression ;", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "continue ;", "break": "break ;", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "IDFactorTail": {"(": "-1", "void": "-1", "%": "$", "-": "$", "char": "-1", "/": "$", "return": "-1", "else": "-1", "<": "$", "&&": "$", "==": "$", "!=": "$", "while": "-1", "double": "-1", "||": "$", "if": "-1", "float": "-1", ";": "$", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "$", ">=": "$", ")": "$", ">": "$", "int": "-1", "+": "$", "}": "-1", "ID": "-1", "=": "-1", "<=": "$", "NUM": "-1", "*": "$", "#": "-1"}, "Condition": {"(": "Expression JudgeOp Expression", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "Expression JudgeOp Expression", "=": "-1", "<=": "-1", "NUM": "Expression JudgeOp Expression", "*": "-1", "#": "-1"}, "Term": {"(": "Factor TermTail", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "Factor TermTail", "=": "-1", "<=": "-1", "NUM": "Factor TermTail", "*": "-1", "#": "-1"}, "VarDefs": {"(": "-1", "void": "VarDef VarDefs", "%": "-1", "-": "-1", "char": "VarDef VarDefs", "/": "-1", "return": "$", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "$", "double": "VarDef VarDefs", "||": "-1", "if": "$", "float": "VarDef VarDefs", ";": "-1", "++": "$", "continue": "$", "break": "$", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "VarDef VarDefs", "+": "-1", "}": "$", "ID": "$", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "TermTail": {"(": "-1", "void": "-1", "%": "MulOp Factor TermTail", "-": "$", "char": "-1", "/": "MulOp Factor TermTail", "return": "-1", "else": "-1", "<": "$", "&&": "$", "==": "$", "!=": "$", "while": "-1", "double": "-1", "||": "$", "if": "-1", "float": "-1", ";": "$", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "$", ">=": "$", ")": "$", ">": "$", "int": "-1", "+": "$", "}": "-1", "ID": "-1", "=": "-1", "<=": "$", "NUM": "-1", "*": "MulOp Factor TermTail", "#": "-1"}, "Expression": {"(": "Term ExpressionTail", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "Term ExpressionTail", "=": "-1", "<=": "-1", "NUM": "Term ExpressionTail", "*": "-1", "#": "-1"}, "AssignOrFuncTail": {"(": "( Arguments ) ;", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "IDTail EqualOp Expression ;", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "ElsePart": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "$", "else": "else { CodeBody } ElseifPartTail", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "$", "double": "-1", "||": "-1", "if": "$", "float": "-1", ";": "-1", "++": "$", "continue": "$", "break": "$", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "$", "ID": "$", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "WhileStatement": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "while ( Condition ) { CodeBody }", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "Statements": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "Statement Statements", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "Statement Statements", "double": "-1", "||": "-1", "if": "Statement Statements", "float": "-1", ";": "-1", "++": "Statement Statements", "continue": "Statement Statements", "break": "Statement Statements", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "$", "ID": "Statement Statements", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "MoreIDs": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "$", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": ", ID IDTail InitExpr MoreIDs", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "StatementTail": {"(": "AssignOrFuncTail", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "IncrementOp ;", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "AssignOrFuncTail", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "ElseifPartTail": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "$", "else": "else if ( Condition ) { CodeBody } ElseifPartTail", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "$", "double": "-1", "||": "-1", "if": "$", "float": "-1", ";": "-1", "++": "$", "continue": "$", "break": "$", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "$", "ID": "$", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}, "Argument": {"(": "Expression", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "-1", ">=": "-1", ")": "-1", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "Expression", "=": "-1", "<=": "-1", "NUM": "Expression", "*": "-1", "#": "-1"}, "ExpressionTail": {"(": "-1", "void": "-1", "%": "-1", "-": "AddOp Term ExpressionTail", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "$", "&&": "AddOp Term ExpressionTail", "==": "$", "!=": "$", "while": "-1", "double": "-1", "||": "AddOp Term ExpressionTail", "if": "-1", "float": "-1", ";": "$", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": "$", ">=": "$", ")": "$", ">": "$", "int": "-1", "+": "AddOp Term ExpressionTail", "}": "-1", "ID": "-1", "=": "-1", "<=": "$", "NUM": "-1", "*": "-1", "#": "-1"}, "ParamListTail": {"(": "-1", "void": "-1", "%": "-1", "-": "-1", "char": "-1", "/": "-1", "return": "-1", "else": "-1", "<": "-1", "&&": "-1", "==": "-1", "!=": "-1", "while": "-1", "double": "-1", "||": "-1", "if": "-1", "float": "-1", ";": "-1", "++": "-1", "continue": "-1", "break": "-1", "{": "-1", ",": ", Param ParamListTail", ">=": "-1", ")": "$", ">": "-1", "int": "-1", "+": "-1", "}": "-1", "ID": "-1", "=": "-1", "<=": "-1", "NUM": "-1", "*": "-1", "#": "-1"}}
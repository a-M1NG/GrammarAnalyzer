{"Param": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "Type ID IDTail", ">": "-1", "float": "Type ID IDTail", "while": "-1", "ID": "-1", "-": "-1", "double": "Type ID IDTail", ",": "-1", "{": "-1", "int": "Type ID IDTail", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "Type ID IDTail", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "WhileStatement": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "while ( Condition ) { CodeBody }", "ID": "-1", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "CodeBody": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "VarDefs Statements", ">": "-1", "float": "VarDefs Statements", "while": "VarDefs Statements", "ID": "VarDefs Statements", "-": "-1", "double": "VarDefs Statements", ",": "-1", "{": "-1", "int": "VarDefs Statements", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "VarDefs Statements", "==": "-1", "continue": "VarDefs Statements", "break": "VarDefs Statements", "+": "-1", "return": "VarDefs Statements", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "$", "char": "VarDefs Statements", "++": "VarDefs Statements", "*": "-1", "&&": "-1", "#": "-1"}, "IDList": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "ID IDTail InitExpr MoreIDs", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "TermTail": {"<": "$", "<=": "$", "(": "-1", "!=": "$", "/": "MulOp Factor TermTail", "void": "-1", ">": "$", "float": "-1", "while": "-1", "ID": "-1", "-": "$", "double": "-1", ",": "$", "{": "-1", "int": "-1", ")": "$", "%": "MulOp Factor TermTail", "||": "$", ";": "$", "if": "-1", "==": "$", "continue": "-1", "break": "-1", "+": "$", "return": "-1", "NUM": "-1", ">=": "$", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "MulOp Factor TermTail", "&&": "$", "#": "-1"}, "ArgumentList": {"<": "-1", "<=": "-1", "(": "Argument ArgumentListTail", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "Argument ArgumentListTail", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "Argument ArgumentListTail", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "Condition": {"<": "-1", "<=": "-1", "(": "Expression JudgeOp Expression", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "Expression JudgeOp Expression", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "Expression JudgeOp Expression", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "ControlStatement": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "continue ;", "break": "break ;", "+": "-1", "return": "return Expression ;", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "AssignOrFuncTail": {"<": "-1", "<=": "-1", "(": "( Arguments ) ;", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "IDTail EqualOp Expression ;", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "Factor": {"<": "-1", "<=": "-1", "(": "( Expression )", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "ID IDFactorTail", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "NUM", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "MoreIDs": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": ", ID IDTail InitExpr MoreIDs", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "$", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "Term": {"<": "-1", "<=": "-1", "(": "Factor TermTail", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "Factor TermTail", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "Factor TermTail", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "VarDef": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "Type IDList ;", ">": "-1", "float": "Type IDList ;", "while": "-1", "ID": "-1", "-": "-1", "double": "Type IDList ;", ",": "-1", "{": "-1", "int": "Type IDList ;", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "Type IDList ;", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "Statement": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "WhileStatement", "ID": "ID StatementTail", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "IfStatement", "==": "-1", "continue": "ControlStatement", "break": "ControlStatement", "+": "-1", "return": "ControlStatement", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "++ ID", "*": "-1", "&&": "-1", "#": "-1"}, "StatementTail": {"<": "-1", "<=": "-1", "(": "AssignOrFuncTail", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "AssignOrFuncTail", "}": "-1", "char": "-1", "++": "IncrementOp ;", "*": "-1", "&&": "-1", "#": "-1"}, "IDFactorTail": {"<": "$", "<=": "$", "(": "-1", "!=": "$", "/": "$", "void": "-1", ">": "$", "float": "-1", "while": "-1", "ID": "-1", "-": "$", "double": "-1", ",": "$", "{": "-1", "int": "-1", ")": "$", "%": "$", "||": "$", ";": "$", "if": "-1", "==": "$", "continue": "-1", "break": "-1", "+": "$", "return": "-1", "NUM": "-1", ">=": "$", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "$", "&&": "$", "#": "-1"}, "Statements": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "Statement Statements", "ID": "Statement Statements", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "Statement Statements", "==": "-1", "continue": "Statement Statements", "break": "Statement Statements", "+": "-1", "return": "Statement Statements", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "$", "char": "-1", "++": "Statement Statements", "*": "-1", "&&": "-1", "#": "-1"}, "FuncDefs": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "FuncDef FuncDefs", ">": "-1", "float": "FuncDef FuncDefs", "while": "-1", "ID": "-1", "-": "-1", "double": "FuncDef FuncDefs", ",": "-1", "{": "-1", "int": "FuncDef FuncDefs", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "FuncDef FuncDefs", "++": "-1", "*": "-1", "&&": "-1", "#": "$"}, "MulOp": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "/", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "%", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "*", "&&": "-1", "#": "-1"}, "IDTail": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": "$", "{": "-1", "int": "-1", ")": "$", "%": "-1", "||": "-1", ";": "$", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "$", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "EqualOp": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "=", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "JudgeOp": {"<": "<", "<=": "<=", "(": "-1", "!=": "!=", "/": "-1", "void": "-1", ">": ">", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "==", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": ">=", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "ExpressionTail": {"<": "$", "<=": "$", "(": "-1", "!=": "$", "/": "-1", "void": "-1", ">": "$", "float": "-1", "while": "-1", "ID": "-1", "-": "AddOp Term ExpressionTail", "double": "-1", ",": "$", "{": "-1", "int": "-1", ")": "$", "%": "-1", "||": "AddOp Term ExpressionTail", ";": "$", "if": "-1", "==": "$", "continue": "-1", "break": "-1", "+": "AddOp Term ExpressionTail", "return": "-1", "NUM": "-1", ">=": "$", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "AddOp Term ExpressionTail", "#": "-1"}, "Type": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "void", ">": "-1", "float": "float", "while": "-1", "ID": "-1", "-": "-1", "double": "double", ",": "-1", "{": "-1", "int": "int", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "char", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "ElsePart": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "$", "ID": "$", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "$", "==": "-1", "continue": "$", "break": "$", "+": "-1", "return": "$", "NUM": "-1", ">=": "-1", "else": "else { CodeBody } ElseifPartTail", "=": "-1", "}": "$", "char": "-1", "++": "$", "*": "-1", "&&": "-1", "#": "-1"}, "IfStatement": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "if ( Condition ) { CodeBody } ElsePart", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "ParamList": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "Param ParamListTail", ">": "-1", "float": "Param ParamListTail", "while": "-1", "ID": "-1", "-": "-1", "double": "Param ParamListTail", ",": "-1", "{": "-1", "int": "Param ParamListTail", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "Param ParamListTail", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "FuncDef": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "Type ID ( Params ) { CodeBody }", ">": "-1", "float": "Type ID ( Params ) { CodeBody }", "while": "-1", "ID": "-1", "-": "-1", "double": "Type ID ( Params ) { CodeBody }", ",": "-1", "{": "-1", "int": "Type ID ( Params ) { CodeBody }", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "Type ID ( Params ) { CodeBody }", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "Expression": {"<": "-1", "<=": "-1", "(": "Term ExpressionTail", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "Term ExpressionTail", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "Term ExpressionTail", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "Arguments": {"<": "-1", "<=": "-1", "(": "ArgumentList", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "ArgumentList", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "$", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "ArgumentList", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "InitExpr": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": "$", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "$", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "= Expression", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "ParamListTail": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": ", Param ParamListTail", "{": "-1", "int": "-1", ")": "$", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "IncrementOp": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "++", "*": "-1", "&&": "-1", "#": "-1"}, "Program": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "FuncDefs", ">": "-1", "float": "FuncDefs", "while": "-1", "ID": "-1", "-": "-1", "double": "FuncDefs", ",": "-1", "{": "-1", "int": "FuncDefs", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "FuncDefs", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "VarDefs": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "VarDef VarDefs", ">": "-1", "float": "VarDef VarDefs", "while": "$", "ID": "$", "-": "-1", "double": "VarDef VarDefs", ",": "-1", "{": "-1", "int": "VarDef VarDefs", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "$", "==": "-1", "continue": "$", "break": "$", "+": "-1", "return": "$", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "$", "char": "VarDef VarDefs", "++": "$", "*": "-1", "&&": "-1", "#": "-1"}, "ArgumentListTail": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-1", "double": "-1", ",": ", Argument ArgumentListTail", "{": "-1", "int": "-1", ")": "$", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "ElseifPartTail": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "$", "ID": "$", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "$", "==": "-1", "continue": "$", "break": "$", "+": "-1", "return": "$", "NUM": "-1", ">=": "-1", "else": "else if ( Condition ) { CodeBody } ElseifPartTail", "=": "-1", "}": "$", "char": "-1", "++": "$", "*": "-1", "&&": "-1", "#": "-1"}, "Params": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "ParamList", ">": "-1", "float": "ParamList", "while": "-1", "ID": "-1", "-": "-1", "double": "ParamList", ",": "-1", "{": "-1", "int": "ParamList", ")": "$", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "ParamList", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "Argument": {"<": "-1", "<=": "-1", "(": "Expression", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "Expression", "-": "-1", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "-1", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "-1", "return": "-1", "NUM": "Expression", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "-1", "#": "-1"}, "AddOp": {"<": "-1", "<=": "-1", "(": "-1", "!=": "-1", "/": "-1", "void": "-1", ">": "-1", "float": "-1", "while": "-1", "ID": "-1", "-": "-", "double": "-1", ",": "-1", "{": "-1", "int": "-1", ")": "-1", "%": "-1", "||": "||", ";": "-1", "if": "-1", "==": "-1", "continue": "-1", "break": "-1", "+": "+", "return": "-1", "NUM": "-1", ">=": "-1", "else": "-1", "=": "-1", "}": "-1", "char": "-1", "++": "-1", "*": "-1", "&&": "&&", "#": "-1"}}
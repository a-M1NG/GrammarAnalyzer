Program->FuncDefs
FuncDefs->FuncDef FuncDefs
FuncDefs->$
FuncDef->Type ID ( Params ) { CodeBody }
Params->ParamList
Params->$
ParamList->Param ParamListTail
ParamListTail->, Param ParamListTail
ParamListTail->$
Param->Type ID IDTail
IDTail->$
Type->void
Type->int
Type->float
Type->double
Type->char
CodeBody->VarDefs Statements
CodeBody->$
VarDefs->VarDef VarDefs
VarDefs->$
VarDef->Type IDList ;
IDList->ID IDTail InitExpr MoreIDs
MoreIDs->, ID IDTail InitExpr MoreIDs
MoreIDs->$
InitExpr->= Expression
InitExpr->$
Statements->Statement Statements
Statements->$
Statement->ID StatementTail
Statement->IfStatement
Statement->WhileStatement
Statement->ControlStatement
Statement->++ ID
StatementTail->AssignOrFuncTail
StatementTail->IncrementOp ;
AssignOrFuncTail->( Arguments ) ;
AssignOrFuncTail->IDTail EqualOp Expression ;
IncrementOp->++
IfStatement->if ( Condition ) { CodeBody } ElseifPart ElsePart
ElseifPart->else if ( Condition ) { CodeBody } ElseifPart
ElseifPart->$
ElsePart->else { CodeBody }
ElsePart->$
WhileStatement->while ( Condition ) { CodeBody }
ControlStatement->break ;
ControlStatement->continue ;
ControlStatement->return Expression ;
Arguments->ArgumentList
Arguments->$
ArgumentList->Argument ArgumentListTail
ArgumentListTail->, Argument ArgumentListTail
ArgumentListTail->$
Argument->Expression
Condition->Expression JudgeOp Expression
JudgeOp->==
JudgeOp-><=
JudgeOp->>=
JudgeOp->!=
JudgeOp->>
JudgeOp-><
Expression->Term ExpressionTail
Expression->$
ExpressionTail->AddOp Term ExpressionTail
ExpressionTail->$
AddOp->+
AddOp->-
AddOp->&&
AddOp->||
Term->Factor TermTail
TermTail->MulOp Factor TermTail
TermTail->$
MulOp->*
MulOp->/
MulOp->%
Factor->ID IDFactorTail
Factor->NUM
Factor->( Expression )
IDFactorTail->$
EqualOp->=